//
// Copyright (c) 2019 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
[[at_mutation]]
=== @Mutation

Exposes the annotated method as a mutation in the GraphQL schema.

.Parameters
same as in <<at_query>>

.Example
[source,java,numbered]
----
public class CharacterService {
  @Mutation(name = "addCharacter", description = "Save a new character")
  public Character save(Character character) {
     // ...
   }
}
----

Resulting schema SDL:

[source,json,numbered]
----
type Mutation {
   # Save a new character
   addCharacter(character: CharacterInput): Character
}
----

TIP: While the type of the method parameter and the return type were the same (`Character`) in Java, two distinct types are generated in the GraphQL schema (`Character` and `CharacterInput`). 
This is necessary as input and object types are defined separately in the GraphQL spec.